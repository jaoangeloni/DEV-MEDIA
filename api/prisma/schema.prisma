// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int        @id @default(autoincrement())
  username       String     @unique
  name           String
  email          String     @unique
  password       String // Coluna para armazenar senhas criptografadas
  profilePicture Bytes? // Coluna de imagem como um array de bytes (BLOB)
  profileBanner  Bytes? // Coluna de imagem como um array de bytes (BLOB)
  posts          Post[] // Relacionamento com os posts criados pelo usu치rio
  gamePages      GamePage[] // Relacionamento com as p치ginas de jogo do usu치rio
  Comment        Comment[]
  Like           Like[]
}

// Define o modelo de dados para a tabela "post"
model Post {
  id          Int       @id @default(autoincrement())
  idPage      Int?
  description String?
  postContent String?
  date        DateTime  @default(now())
  user        User?     @relation(fields: [idPage], references: [id])
  comments    Comment[] // Relacionamento com os coment치rios no post
  likes       Like[] // Relacionamento com os likes no post
}

// Define o modelo de dados para a tabela "comments"
model Comment {
  id                 Int      @id @default(autoincrement())
  idUser             Int
  idPost             Int
  commentDescription String
  date               DateTime @default(now())
  user               User     @relation(fields: [idUser], references: [id])
  post               Post     @relation(fields: [idPost], references: [id])
}

// Define o modelo de dados para a tabela "likes"
model Like {
  id     Int      @id @default(autoincrement())
  idUser Int
  idPost Int
  date   DateTime @default(now())
  user   User     @relation(fields: [idUser], references: [id])
  post   Post     @relation(fields: [idPost], references: [id])
}

// Define o modelo de dados para a tabela "gamePage"
model GamePage {
  id          Int    @id @default(autoincrement())
  idUser      Int
  name        String
  gamePicture Bytes? // Coluna de imagem como um array de bytes (BLOB)
  gameBanner  Bytes? // Coluna de imagem como um array de bytes (BLOB)
  user        User   @relation(fields: [idUser], references: [id])
}
